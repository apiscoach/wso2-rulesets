documentationUrl: https://github.com/adidas/api-guidelines/blob/master/ruleset.md
rules:

  # ----------------------------#
  # Adidas OAS v2.0, v3.0 rules #
  # ----------------------------#

  adidas-paths-kebab-case:
    description: All YAML/JSON paths MUST follow kebab-case
    severity: warn
    recommended: true
    message: "{{property}} is not kebab-case: {{error}}"
    given: $.paths[*]~
    then:
      function: pattern
      functionOptions:
        match: '^\/([a-z0-9]+(-[a-z0-9]+)*|\{[a-z0-9]+(-[a-z0-9]+)*\})(\/([a-z0-9]+(-[a-z0-9]+)*|\{[a-z0-9]+(-[a-z0-9]+)*\}))*\/?$'

  adidas-path-parameters-camelCase-alphanumeric:
    description: Path parameters MUST follow camelCase
    severity: warn
    recommended: true
    message: "{{property}} path parameter is not camelCase: {{error}}"
    given: $..parameters[?(@.in == 'path')].name
    then:
      function: pattern
      functionOptions:
        match: '^[a-z][a-zA-Z0-9]+$'

  adidas-definitions-camelCase-alphanumeric:
    description: All YAML/JSON definitions MUST follow fields-camelCase and be ASCII alphanumeric characters or `_` or `$`.
    severity: error
    recommended: true
    message: "{{property}} MUST follow camelCase and be ASCII alphanumeric characters or `_` or `$`."
    given: $.definitions[*]~
    then:
      function: pattern
      functionOptions:
        match: '/^[a-z$_]{1}[A-Z09$_]*/'

  adidas-properties-camelCase-alphanumeric:
    description: All JSON Schema properties MUST follow fields-camelCase and be ASCII alphanumeric characters or `_` or `$`.
    severity: error
    recommended: true
    message: "{{property}} MUST follow camelCase and be ASCII alphanumeric characters or `_` or `$`."
    given: $.definitions..properties[*]~
    then:
      function: pattern
      functionOptions:
        match: '/^[a-z$_]{1}[A-Z09$_]*/'

  adidas-request-GET-no-body:
    description: "A 'GET' request MUST NOT accept a 'body` parameter"
    severity: error
    given: $.paths..get.parameters..in
    then:
      function: pattern
      functionOptions:
        notMatch: '/^body$/'

  adidas-headers-no-x-headers:
    description: "All 'HTTP' headers SHOULD NOT include 'X-' headers (https://tools.ietf.org/html/rfc6648)."
    severity: warn
    given: "$..parameters[?(@.in == 'header')].name"
    message: "HTTP headers SHOULD NOT include 'X-' prefix."
    recommended: true
    type: style
    then: 
      function: pattern
      functionOptions:
        notMatch: '/^(x|X)-/'

  adidas-headers-hyphenated-pascal-case:
    description: All `HTTP` headers MUST use `Hyphenated-Pascal-Case` notation
    severity: error
    given: "$..parameters[?(@.in == 'header')].name"
    message: "'HTTP' headers MUST follow 'Hyphenated-Pascal-Case' notation"
    recommended: true
    type: style
    then: 
      function: pattern
      functionOptions:
        match: '/^([A-Z][a-z0-9]-)*([A-Z][a-z0-9])+/'

  # ----------------------#
  # Adidas OAS v2.0 rules #
  # ----------------------#

  adidas-oas2-protocol-https-only:
    description: "ALL requests MUST go through `https` protocol only"
    formats:
      - oas2
    recommended: true
    severity: error
    type: "style"
    message: "Schemes MUST be https and no other value is allowed."
    given: $
    then:
      field: schemes
      function: schema
      functionOptions:
        schema:
          type: array
          items:
            type: string
            enum: ["https"]
          maxItems: 1

  adidas-oas2-request-support-json:
    description: Every request SHOULD support `application/json` media type
    formats:
      - oas2
    severity: warn
    message: "{{description}}: {{error}}"
    recommended: true
    given: "$..consumes"
    then:
      function: schema
      functionOptions:
        schema:
          type: array
          contains:
            type: string
            enum:
              - application/json


  # ----------------------#
  # Adidas OAS v3.0 rules #
  # ----------------------#

  adidas-oas3-request-support-json:
    description: Every request MUST support `application/json` media type
    formats:
      - oas3
    recommended: true
    severity: error
    message: "{{description}}: {{error}}"
    given: "$.paths[*][*].requestBody.content"
    then:
      function: truthy
      field: "application/json"

  # adidas-oas3-valid-example-in-parameters && adidas-oas3-valid-example-in-definitions covered by oas3-valid-media-example

  adidas-oas3-protocol-https-only:
    description: "ALL requests MUST go through `https` protocol only"
    formats:
      - oas3
    severity: error
    message: "Servers MUST be https and no other protocol is allowed."
    given: $.servers[*].url
    then:
      function: pattern
      functionOptions:
        match: "^https:"

  adidas-oas3-response-success-hal:
    description: "All success responses MUST be of media type `application/hal+json` "
    severity: error
    given:
    - $.paths[*][*].responses['300'].content
    - $.paths[*][*].responses['304'].content
    - $.paths[*][*].responses['201'].content
    recommended: true
    formats:
      - oas3
    message: "Response documents MUST be of application/hal+json media types: {{error}}"
    then:
      function: enumeration
      functionOptions:
        values:
          - application/hal+json
  
  # sync and async patterns that can return hal OR problem+json
  adidas-oas3-response-success-OK:
    description: "All success responses MUST be of media type `application/hal+json` or `application/problem+json`"
    severity: error
    given:
    - $.paths[*][*].responses['200'].content
    - $.paths[*][*].responses['202'].content
    recommended: true
    formats:
      - oas3
    message: "Response documents MUST be of application/hal+json or application/problem+json media types: {{error}}"
    then:
      function: enumeration
      functionOptions:
        values:
          - application/hal+json
          - application/problem+json
  
